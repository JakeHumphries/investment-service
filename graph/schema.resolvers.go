package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"fmt"

	"github.com/JakeHumphries/investment-service/graph/model"
)

// Invest is the resolver for the invest field.
func (r *mutationResolver) Invest(ctx context.Context, input model.InvestmentInput) (*model.Investment, error) {
	panic(fmt.Errorf("not implemented: Invest - invest"))
}

// GetFunds is the resolver for the getFunds field.
func (r *queryResolver) GetFunds(ctx context.Context) (*model.FundList, error) {
	panic(fmt.Errorf("not implemented: GetFunds - getFunds"))
}

// GetInvestments is the resolver for the getInvestments field.
func (r *queryResolver) GetInvestments(ctx context.Context, customerID string, limit int, cursor *string) (*model.InvestmentList, error) {
	panic(fmt.Errorf("not implemented: GetInvestments - getInvestments"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
